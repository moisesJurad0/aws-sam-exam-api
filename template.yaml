AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app-exam-api-1

Globals:
  Function:
    Runtime: python3.9
    Architectures:
      - x86_64
    Timeout: 3
    Environment:
      Variables:
        QUESTIONS_TABLE: !Ref QuestionsTable

Resources:
  QuestionsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
  CreateQuestionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: exam_api/
      Handler: create.lambda_handler
      Events:
        CreateQuestions:
          Type: Api
          Properties:
            Path: /questions
            Method: POST
            RestApiId: !Ref ExamAPI
            #Auth:
            #  ApiKeyRequired: true
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref QuestionsTable
  SearchQuestionByIdFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: exam_api/
      Handler: searchById.lambda_handler
      Events:
        SearchByIdQuestions:
          Type: Api
          Properties:
            Path: /questions/{id}
            Method: GET
            RestApiId: !Ref ExamAPI
            #Auth:
            #  ApiKeyRequired: true
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
  SearchQuestionByTextFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: exam_api/
      Handler: searchByText.lambda_handler
      Events:
        SearchByTextQuestions:
          Type: Api
          Properties:            
            Path: /questions
            Method: GET
            RestApiId: !Ref ExamAPI
            #Auth:
            #  ApiKeyRequired: true
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
  ExamAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        ApiKeyRequired: true # sets for all methods
Outputs:
  CreateQuestionAPI:
    Description: "API Gateway endpoint url for creating orders"
    Value: !Sub "https://${ExamAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/questions"
  CreateQuestionFunction:
    Description: "Create Question function ARN"
    Value: !GetAtt CreateQuestionFunction.Arn
  CreateQuestionFunctionIamRole:
    Description: "Create Question function IAM Role ARN"
    Value: !GetAtt CreateQuestionFunctionRole.Arn
  