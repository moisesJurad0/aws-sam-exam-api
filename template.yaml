AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app-exam-api-1

  Sample SAM Template for sam-app-exam-api-1

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.9
    Architectures:
      - x86_64
    Timeout: 3
    Environment:
      Variables:
        QUESTIONS_TABLE: !Ref QuestionsTable

Resources:
  QuestionsTable:
      Type: AWS::Serverless::SimpleTable
      Properties:
        PrimaryKey:
          Name: id
          Type: Number
  CreateQuestionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: exam_api/
      Handler: create.lambda_handler
      Events:
        CreateOrders:
          Type: Api
          Properties:
            Path: /questions
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref QuestionsTable
  SearchByIdQuestionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: exam_api/
      Handler: searchById.lambda_handler
      Events:
        ReadOrders:
          Type: Api
          Properties:
            Path: /questions/{id}
            Method: GET
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
  SearchByTextQuestionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: exam_api/
      Handler: searchById.lambda_handler
      Events:
        ReadOrders:
          Type: Api
          Properties:
            Path: /questions
            Method: GET
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref QuestionsTable
Outputs:
  CreateOrdersAPI:
    Description: "API Gateway endpoint url for creating questions"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/questions"
  CreateQuestionFunction:
    Description: "Create Order function ARN"
    Value: !GetAtt CreateQuestionFunction.Arn
  CreateQuestionFunctionIamRole:
    Description: "Create Order function IAM Role ARN"
    Value: !GetAtt CreateQuestionFunctionRole.Arn